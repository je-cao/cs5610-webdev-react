{"ast":null,"code":"const url = \"https://wbdv-generic-server.herokuapp.com/api/rikki/courses\";\nexport const findCourseById = courseId => fetch(`${url}/${courseId}`).then(response => response.json());\nexport const findAllCourses = () => fetch(url).then(response => response.json());\nexport const createCourse = newCourse => fetch(url, {\n  method: 'POST',\n  body: JSON.stringify(newCourse),\n  headers: {\n    'content-type': 'application/json'\n  }\n}).then(response => response.json());\nexport const deleteCourse = courseId => fetch(`${url}/${courseId}`, {\n  method: 'DELETE'\n}).then(response => response.json());\nexport const updateCourse = (courseId, newCourse) => {};","map":{"version":3,"sources":["/Users/rikkicao/my-app/src/Services/CourseService.js"],"names":["url","findCourseById","courseId","fetch","then","response","json","findAllCourses","createCourse","newCourse","method","body","JSON","stringify","headers","deleteCourse","updateCourse"],"mappings":"AAAA,MAAMA,GAAG,GAAG,6DAAZ;AAEA,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAC1BC,KAAK,CAAE,GAAEH,GAAI,IAAGE,QAAS,EAApB,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,CADG;AAKP,OAAO,MAAMC,cAAc,GAAG,MAC1BJ,KAAK,CAACH,GAAD,CAAL,CAAWI,IAAX,CAAgBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA5B,CADG;AAGP,OAAO,MAAME,YAAY,GAAIC,SAAD,IACxBN,KAAK,CAACH,GAAD,EAAM;AACPU,EAAAA,MAAM,EAAC,MADA;AAEPC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,SAAf,CAFC;AAGPK,EAAAA,OAAO,EAAC;AACJ,oBAAgB;AADZ;AAHD,CAAN,CAAL,CAOKV,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,CADG;AAUP,OAAO,MAAMS,YAAY,GAAIb,QAAD,IACxBC,KAAK,CAAE,GAAEH,GAAI,IAAGE,QAAS,EAApB,EAAuB;AACxBQ,EAAAA,MAAM,EAAC;AADiB,CAAvB,CAAL,CAGKN,IAHL,CAGUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHtB,CADG;AAMP,OAAO,MAAMU,YAAY,GAAG,CAACd,QAAD,EAAWO,SAAX,KAAyB,CAAE,CAAhD","sourcesContent":["const url = \"https://wbdv-generic-server.herokuapp.com/api/rikki/courses\"\n\nexport const findCourseById = (courseId) =>\n    fetch(`${url}/${courseId}`)\n        .then(response => response.json())\n\n\nexport const findAllCourses = () =>\n    fetch(url).then(response => response.json())\n\nexport const createCourse = (newCourse) =>\n    fetch(url, {\n        method:'POST',\n        body: JSON.stringify(newCourse),\n        headers:{\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nexport const deleteCourse = (courseId) =>\n    fetch(`${url}/${courseId}`, {\n        method:'DELETE'\n    })\n        .then(response => response.json())\n\nexport const updateCourse = (courseId, newCourse) => {}"]},"metadata":{},"sourceType":"module"}