{"ast":null,"code":"import { DELETE_WIDGET, CREATE_WIDGET, UPDATE_WIDGET } from \"../actions/widgetActions\";\nconst initialState = {\n  widgets: [{\n    _id: \"123\",\n    name: \"Widget 1\",\n    editing: false\n  }, {\n    _id: \"234\",\n    name: \"Widget 2\",\n    editing: true\n  }, {\n    _id: \"345\",\n    name: \"Widget 3\",\n    editing: false\n  }]\n};\n\nconst widgetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_WIDGET:\n      return {\n        widgets: [...state.widgets, {\n          _id: Date.now() + \"\",\n          name: \"New Widget\"\n        }]\n      };\n\n    case UPDATE_WIDGET:\n      return {\n        widgets: state.widgets.map(widget => widget._id === action.widget._id ? action.widget : widget)\n      };\n\n    case DELETE_WIDGET:\n      return {\n        widgets: state.widgets.filter(widget => widget !== action.widget)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default widgetReducer;","map":{"version":3,"sources":["/Users/rikkicao/my-app/cs5610-webdev-react/src/reducers/widgetsReducers.js"],"names":["DELETE_WIDGET","CREATE_WIDGET","UPDATE_WIDGET","initialState","widgets","_id","name","editing","widgetReducer","state","action","type","Date","now","map","widget","filter"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,aAAvB,EAAsCC,aAAtC,QAA0D,0BAA1D;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CACL;AACIC,IAAAA,GAAG,EAAE,KADT;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,OAAO,EAAE;AAHb,GADK,EAML;AACIF,IAAAA,GAAG,EAAE,KADT;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,OAAO,EAAE;AAHb,GANK,EAWL;AACIF,IAAAA,GAAG,EAAE,KADT;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,OAAO,EAAE;AAHb,GAXK;AADQ,CAArB;;AAoBA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,aAAL;AACI,aAAO;AACHG,QAAAA,OAAO,EAAE,CAAC,GAAGK,KAAK,CAACL,OAAV,EAAmB;AACxBC,UAAAA,GAAG,EAAEO,IAAI,CAACC,GAAL,KAAW,EADQ;AAExBP,UAAAA,IAAI,EAAE;AAFkB,SAAnB;AADN,OAAP;;AAMJ,SAAKJ,aAAL;AACI,aAAO;AACHE,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,CAAcU,GAAd,CACLC,MAAM,IAAIA,MAAM,CAACV,GAAP,KAAeK,MAAM,CAACK,MAAP,CAAcV,GAA7B,GACNK,MAAM,CAACK,MADD,GACUA,MAFf;AADN,OAAP;;AAKJ,SAAKf,aAAL;AACI,aAAO;AACHI,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,CAAcY,MAAd,CAAqBD,MAAM,IAAIA,MAAM,KAAKL,MAAM,CAACK,MAAjD;AADN,OAAP;;AAGJ;AACI,aAAON,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,eAAeD,aAAf","sourcesContent":["import {DELETE_WIDGET, CREATE_WIDGET, UPDATE_WIDGET} from \"../actions/widgetActions\"\n\nconst initialState = {\n    widgets: [\n        {\n            _id: \"123\",\n            name: \"Widget 1\",\n            editing: false\n        },\n        {\n            _id: \"234\",\n            name: \"Widget 2\",\n            editing: true\n        },\n        {\n            _id: \"345\",\n            name: \"Widget 3\",\n            editing: false\n        }\n    ]\n}\n\nconst widgetReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_WIDGET:\n            return {\n                widgets: [...state.widgets, {\n                    _id: Date.now()+\"\",\n                    name: \"New Widget\"\n                }]\n            }\n        case UPDATE_WIDGET:\n            return {\n                widgets: state.widgets.map(\n                    widget => widget._id === action.widget._id ?\n                        action.widget : widget)\n            }\n        case DELETE_WIDGET:\n            return {\n                widgets: state.widgets.filter(widget => widget !== action.widget)\n            }\n        default:\n            return state\n    }\n}\n\nexport default widgetReducer"]},"metadata":{},"sourceType":"module"}