{"ast":null,"code":"const moduleUrl = \"https://wbdv-generic-server.herokuapp.com/api/rikki/modules\";\nconst lessonUrl = \"https://wbdv-generic-server.herokuapp.com/api/rikki/lessons\";\nexport const findLessonsForModule = moduleId => fetch(`${moduleUrl}/${moduleId}/lessons`).then(response => response.json());\nexport const createLessonForModule = (moduleId, lesson) => fetch(`${moduleUrl}/${moduleId}/lessons`, {\n  method: \"POST\",\n  body: JSON.stringify(lesson),\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n}).then(response => response.json());\nexport const updateLesson = lesson => fetch(`${lessonUrl}/${lesson._id}`, {\n  method: \"PUT\",\n  body: JSON.stringify(lesson),\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n}).then(response => response.json());\nexport const deleteLesson = lessonId => fetch(`${lessonUrl}/${lessonId}`, {\n  method: \"DELETE\"\n}).then(response => response.json());\nexport default {\n  findLessonsForModule,\n  createLessonForModule,\n  deleteLesson,\n  updateLesson\n};","map":{"version":3,"sources":["/Users/rikkicao/my-app/cs5610-webdev-react/src/Services/LessonService.js"],"names":["moduleUrl","lessonUrl","findLessonsForModule","moduleId","fetch","then","response","json","createLessonForModule","lesson","method","body","JSON","stringify","headers","updateLesson","_id","deleteLesson","lessonId"],"mappings":"AAAA,MAAMA,SAAS,GAAG,6DAAlB;AACA,MAAMC,SAAS,GAAG,6DAAlB;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,QAAD,IAChCC,KAAK,CAAE,GAAEJ,SAAU,IAAGG,QAAS,UAA1B,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,CADG;AAIP,OAAO,MAAMC,qBAAqB,GAAG,CAACL,QAAD,EAAWM,MAAX,KACjCL,KAAK,CAAE,GAAEJ,SAAU,IAAGG,QAAS,UAA1B,EAAqC;AACtCO,EAAAA,MAAM,EAAE,MAD8B;AAEtCC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAFgC;AAGtCK,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAH6B,CAArC,CAAL,CAMGT,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,CADG;AASP,OAAO,MAAMQ,YAAY,GAAIN,MAAD,IACxBL,KAAK,CAAE,GAAEH,SAAU,IAAGQ,MAAM,CAACO,GAAI,EAA5B,EAA+B;AAChCN,EAAAA,MAAM,EAAE,KADwB;AAEhCC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAF0B;AAGhCK,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAHuB,CAA/B,CAAL,CAMGT,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,CADG;AASP,OAAO,MAAMU,YAAY,GAAGC,QAAQ,IAChCd,KAAK,CAAE,GAAEH,SAAU,IAAGiB,QAAS,EAA1B,EAA4B;AAC7BR,EAAAA,MAAM,EAAE;AADqB,CAA5B,CAAL,CAEGL,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFpB,CADG;AAMP,eAAe;AACXL,EAAAA,oBADW;AAEXM,EAAAA,qBAFW;AAGXS,EAAAA,YAHW;AAIXF,EAAAA;AAJW,CAAf","sourcesContent":["const moduleUrl = \"https://wbdv-generic-server.herokuapp.com/api/rikki/modules\"\nconst lessonUrl = \"https://wbdv-generic-server.herokuapp.com/api/rikki/lessons\"\n\nexport const findLessonsForModule = (moduleId) =>\n    fetch(`${moduleUrl}/${moduleId}/lessons`)\n        .then(response => response.json())\n\nexport const createLessonForModule = (moduleId, lesson) =>\n    fetch(`${moduleUrl}/${moduleId}/lessons`, {\n        method: \"POST\",\n        body: JSON.stringify(lesson),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then(response => response.json())\n\nexport const updateLesson = (lesson) =>\n    fetch(`${lessonUrl}/${lesson._id}`, {\n        method: \"PUT\",\n        body: JSON.stringify(lesson),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then(response => response.json())\n\nexport const deleteLesson = lessonId =>\n    fetch(`${lessonUrl}/${lessonId}`,{\n        method: \"DELETE\"\n    }).then(response => response.json())\n\n\nexport default {\n    findLessonsForModule,\n    createLessonForModule,\n    deleteLesson,\n    updateLesson\n}"]},"metadata":{},"sourceType":"module"}